extends layout

block content
    h1= title
    p Welcome to #{title}
    div#command
    div#result
    div#map-canvas

    script.
        $(function() {
            function createDeviceCommandElement(data) {
                $('#command').append($('<div><p>new device: ' + data.sender + '</p></div>')
                                .addClass('container_' + data.sender)
                                .append($('<button>yes</button>')
                                        .attr({ name: 'yes' })
                                        .addClass('button_' + data.sender)
                                        .addClass('text')
                                        .attr({"data-sender": data.sender})
                        ).append($('<button>no</button>')
                                        .attr({ name: 'no' })
                                        .addClass('button_' + data.sender)
                                        .addClass('text')
                                        .attr({"data-sender": data.sender})
                        )
                );

                $('#command').find('.button_' + data.sender).on('click', function() {
                    var name = $(this).attr('name');
                    var sender = $(this).data('sender');
                    socket.emit('command', {name: name, sender: sender});
                });
            }

            var socket = io(location.host);
            var $result = $('#result');
            socket.on('gps_data', function(data) {
                $result.text('sender: ' + data.sender + ', send: ' + JSON.stringify(data.message) + '');
                var msgObj = data.message;
                autoUpdate(new google.maps.LatLng(msgObj.latitude, msgObj.longitude));
            });

            socket.on('status', function(data) {
                if (data.message.err) {
                    return $('#flash').text(data.message.err.message);
                }
                if (data.message.value === 'off') {
                    $result.text('');
                }
            });

            socket.on('devices', function(data) {
                Object.keys(data).forEach(function(value){
                    var data = {
                        sender:value,
                        message:'connected'
                    };
                    createDeviceCommandElement(data);
                });
            });

            socket.on('deviceConnected', function(data){
                createDeviceCommandElement(data);
            });

            socket.on('deviceDisconnected', function(data){
                $('#command').find('.button_' + data.sender).each(function(){
                    $(this).off('click');
                });
                $('#command').find('.container_' + data.sender).remove();
            });
            //function initialize() {
            //    var mapOptions = {
            //        center: { lat: -34.397, lng: 150.644},
            //        zoom: 8
            //    };
            //    var map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
            //}
            //google.maps.event.addDomListener(window, 'load', initialize);

            // Initialize the Google Maps API v3
            var map = new google.maps.Map(document.getElementById('map-canvas'), {
                zoom: 15,
                center: { lat: 50.837864, lng: 4.398080 },
                mapTypeId: google.maps.MapTypeId.ROADMAP
            });
            var marker = null;

            function autoUpdate(newPoint) {
                if (marker) {
                    // Marker already created - Move it
                    marker.setPosition(newPoint);
                } else {
                    // Marker does not exist - Create it
                    marker = new google.maps.Marker({
                        position: newPoint,
                        map: map
                    });
                }
                // Center the map on the new position
                map.setCenter(newPoint);
                // Call the autoUpdate() function every 5 seconds
                //setTimeout(autoUpdate, 5000);
            }
        });
